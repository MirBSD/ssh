- EVP_sha256 now exists
- use -DNO_BSDAUTH instead of -DBSD_AUTH next time

drop:

unifdef:
-UKRB5
-UGSSAPI

maybe -UENABLE_PKCS11

drop the whole sk shit, it uses ecc only anyway

.Bk -words

.It Fl … doesn’t warn about too many arguments

less ciphers than proper: old ssh has:
|	struct Cipher {
|		const char *name;
|		int     number;         /* for ssh1 only */
|		u_int   block_size;
|		u_int   key_len;
|		u_int   discard_len;
|		u_int   cbc_mode;
|		const EVP_CIPHER        *(*evptype)(void);
|	} ciphers[] = {
|	drop	{ "none",               SSH_CIPHER_NONE, 8, 0, 0, 0, EVP_enc_null },
|	drop	{ "des",                SSH_CIPHER_DES, 8, 8, 0, 1, EVP_des_cbc },
|	ddop	{ "3des",               SSH_CIPHER_3DES, 8, 16, 0, 1, evp_ssh1_3des },
|	drop	{ "blowfish",           SSH_CIPHER_BLOWFISH, 8, 32, 0, 1, evp_ssh1_bf },
|
|	ok	{ "3des-cbc",           SSH_CIPHER_SSH2, 8, 24, 0, 1, EVP_des_ede3_cbc },
|	miss	{ "blowfish-cbc",       SSH_CIPHER_SSH2, 8, 16, 0, 1, EVP_bf_cbc },
|	miss	{ "cast128-cbc",        SSH_CIPHER_SSH2, 8, 16, 0, 1, EVP_cast5_cbc },
|	miss	{ "arcfour",            SSH_CIPHER_SSH2, 8, 16, 0, 0, EVP_rc4 },
|	miss	{ "arcfour128",         SSH_CIPHER_SSH2, 8, 16, 1536, 0, EVP_rc4 },
|	miss	{ "arcfour256",         SSH_CIPHER_SSH2, 8, 32, 1536, 0, EVP_rc4 },
|	ok	{ "aes128-cbc",         SSH_CIPHER_SSH2, 16, 16, 0, 1, EVP_aes_128_cbc },
|	ok	{ "aes192-cbc",         SSH_CIPHER_SSH2, 16, 24, 0, 1, EVP_aes_192_cbc },
|	ok	{ "aes256-cbc",         SSH_CIPHER_SSH2, 16, 32, 0, 1, EVP_aes_256_cbc },
|	ok	{ "rijndael-cbc@lysator.liu.se",
|					SSH_CIPHER_SSH2, 16, 32, 0, 1, EVP_aes_256_cbc },
|	ok	{ "aes128-ctr",         SSH_CIPHER_SSH2, 16, 16, 0, 0, evp_aes_128_ctr },
|	ok	{ "aes192-ctr",         SSH_CIPHER_SSH2, 16, 24, 0, 0, evp_aes_128_ctr },
|	ok	{ "aes256-ctr",         SSH_CIPHER_SSH2, 16, 32, 0, 0, evp_aes_128_ctr },
|
|		{ NULL,                 SSH_CIPHER_INVALID, 0, 0, 0, 0, NULL }
|	};
